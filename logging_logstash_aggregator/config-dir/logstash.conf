input {
  redis {
    host      => "REDIS_HOST"
    port      => 6379
    data_type => "list"
    key       => "logstash"
    codec     => json
    type      => docker
  }
}

filter {
  # remove App 209 stdout:
  if ([log] =~ /App [0-9]* std(in|err|out): /) {
    mutate { gsub => ["[log]", "App [0-9]* std(in|err|out): ", ""]}
  }

  # masking PII data
  mutate {
    gsub => [
      "[log]", "<soap[\d]*:password>(.*)<\/soap[\d]*:password>", "<soap:password>password_removed_by_logstash</soap:password>"
    ]
  }

  json {
    source => "log"
    target => "json"
  }

  mutate {
    convert => {
      "[json][timestamp]"  => "string"
      "[json][status]"     => "string"
      "[json][request_id]" => "string"
      "[json][message_body]" => "string"
    }
  }

  # ignore json.details to avoid mapping explosion
  json_encode {
    source => "[json][details]"
  }

  # change type of index per application
  if [attrs][label_app] == "digital" {
    mutate { replace => { type => "digital" } }
  }

  if [attrs][label_app] == "analytics" {
    mutate { replace => { type => "analytics" } }
  }

  if [attrs][label_app] =~ /gw(pc|hvq|bc|cm)/ {
    mutate { replace => { type => "gw" } }
  }
}

# input log type: log (filebeat) and esblog
output {
    elasticsearch {
      hosts => ["ELASTICSEARCH_HOST:9200"]
      index => "%{type}-%{+YYYY.MM.dd}"
      user => "SHIELD_USER"
      password => "SHIELD_PASSWORD"
    }
}
